{
    "openapi": "3.0.2",
    "info": {
        "title": "Apicurio API Designer API",
        "version": "0.1-dev",
        "description": "The REST API for the back-end component of the Apicurio API Designer.",
        "contact": {
            "name": "Apicurio",
            "url": "https://github.com/apicurio/apicurio-api-designer",
            "email": "apicurio@lists.jboss.org"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "https://www.apache.org/licenses/LICENSE-2.0"
        }
    },
    "paths": {
        "/system/info": {
            "get": {
                "tags": [
                    "System"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SystemInfo"
                                }
                            }
                        },
                        "description": "TODO"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "description": "TODO"
                    }
                },
                "operationId": "getSystemInfo"
            }
        },
        "/designs": {
            "get": {
                "tags": [
                    "Design"
                ],
                "parameters": [
                    {
                        "name": "size",
                        "description": "The number of artifacts to return.  Defaults to 20.",
                        "schema": {
                            "type": "integer"
                        },
                        "in": "query"
                    },
                    {
                        "name": "page",
                        "description": "The number of artifacts to skip before starting the result set.  Defaults to 0.",
                        "schema": {
                            "type": "integer"
                        },
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DesignSearchResults"
                                }
                            }
                        },
                        "description": "TODO"
                    },
                    "409": {
                        "$ref": "#/components/responses/Conflict"
                    },
                    "500": {
                        "$ref": "#/components/responses/ServerError"
                    }
                },
                "operationId": "getDesigns"
            },
            "post": {
                "requestBody": {
                    "content": {
                        "*/*": {
                            "schema": {
                                "$ref": "#/components/schemas/FileContent"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Design"
                ],
                "parameters": [
                    {
                        "name": "X-Designer-Name",
                        "description": "",
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "required": true
                    },
                    {
                        "name": "X-Designer-Description",
                        "description": "",
                        "schema": {
                            "type": "string"
                        },
                        "in": "header"
                    },
                    {
                        "name": "X-Designer-Type",
                        "description": "",
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "required": true
                    },
                    {
                        "name": "X-Designer-Origin",
                        "description": "",
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Design"
                                }
                            }
                        },
                        "description": "TODO"
                    },
                    "500": {
                        "$ref": "#/components/responses/ServerError"
                    }
                },
                "operationId": "createDesign"
            }
        },
        "/designs/{designId}": {
            "get": {
                "tags": [
                    "Design"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/FileContent"
                                }
                            }
                        },
                        "description": "TODO"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/ServerError"
                    }
                },
                "operationId": "getDesign"
            },
            "put": {
                "requestBody": {
                    "content": {
                        "*/*": {
                            "schema": {
                                "$ref": "#/components/schemas/FileContent"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Design"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Design"
                                }
                            }
                        },
                        "description": "TODO"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/ServerError"
                    }
                },
                "operationId": "updateDesign"
            },
            "delete": {
                "tags": [
                    "Design"
                ],
                "responses": {
                    "204": {
                        "description": "TODO"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/ServerError"
                    }
                },
                "operationId": "deleteDesign"
            },
            "parameters": [
                {
                    "name": "designId",
                    "schema": {
                        "type": "string"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/designs/{designId}/meta": {
            "get": {
                "tags": [
                    "Design"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Design"
                                }
                            }
                        },
                        "description": "TODO"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/ServerError"
                    }
                },
                "operationId": "getDesignMetadata"
            },
            "put": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EditableDesignMetadata"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Design"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Design"
                                }
                            }
                        },
                        "description": "TODO"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/ServerError"
                    }
                },
                "operationId": "updateDesignMetadata"
            },
            "parameters": [
                {
                    "name": "designId",
                    "schema": {
                        "type": "string"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/designs/{designId}/events": {
            "get": {
                "tags": [
                    "Design"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DesignEventList"
                                }
                            }
                        },
                        "description": "Successful response."
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/ServerError"
                    }
                },
                "operationId": "getAllDesignEvents",
                "summary": "Gets all events for the design"
            },
            "post": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateDesignEvent"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Design"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DesignEvent"
                                }
                            }
                        },
                        "description": "The event was created successfully."
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/ServerError"
                    }
                },
                "operationId": "createDesignEvent",
                "summary": "Create a new design event"
            },
            "parameters": [
                {
                    "name": "designId",
                    "schema": {
                        "type": "string"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/search/designs": {
            "summary": "Search for artifacts in the registry.",
            "get": {
                "tags": [
                    "Search"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "description": "Filter by artifact name.",
                        "schema": {
                            "type": "string"
                        },
                        "in": "query"
                    },
                    {
                        "name": "offset",
                        "description": "The number of artifacts to skip before starting to collect the result set.  Defaults to 0.",
                        "schema": {
                            "default": 0,
                            "type": "integer"
                        },
                        "in": "query",
                        "required": false
                    },
                    {
                        "name": "limit",
                        "description": "The number of artifacts to return.  Defaults to 20.",
                        "schema": {
                            "default": 20,
                            "type": "integer"
                        },
                        "in": "query",
                        "required": false
                    },
                    {
                        "name": "order",
                        "description": "Sort order, ascending (`asc`) or descending (`desc`).",
                        "schema": {
                            "$ref": "#/components/schemas/SortOrder"
                        },
                        "in": "query"
                    },
                    {
                        "name": "orderby",
                        "description": "The field to sort by.  Can be one of:\n\n* `name`\n* `createdOn`\n",
                        "schema": {
                            "$ref": "#/components/schemas/SortBy"
                        },
                        "in": "query"
                    },
                    {
                        "name": "description",
                        "description": "Filter by description.",
                        "schema": {
                            "type": "string"
                        },
                        "in": "query"
                    },
                    {
                        "name": "type",
                        "description": "Filter by design type.",
                        "schema": {
                            "type": "string"
                        },
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DesignSearchResults"
                                }
                            }
                        },
                        "description": "On a successful response, returns a result set of designs - one for each design\nthat matches the criteria."
                    },
                    "500": {
                        "$ref": "#/components/responses/ServerError"
                    }
                },
                "operationId": "searchDesigns",
                "summary": "Search for designs",
                "description": "Returns a paginated list of all designs that match the provided filter criteria.\n"
            }
        },
        "x-codegen-contextRoot": "/apis/designer/v0"
    },
    "components": {
        "schemas": {
            "FileContent": {
                "format": "binary",
                "type": "string",
                "x-codegen-inline": true
            },
            "EditableDesignMetadata": {
                "title": "EditableDesignMetaData",
                "description": "",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ObjectReference"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "description": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "ObjectReference": {
                "required": [
                    "id",
                    "kind"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "kind": {
                        "type": "string"
                    },
                    "href": {
                        "type": "string"
                    }
                }
            },
            "Error": {
                "title": "Error",
                "description": "",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ObjectReference"
                    },
                    {
                        "required": [
                            "code",
                            "reason"
                        ],
                        "type": "object",
                        "properties": {
                            "reason": {
                                "type": "string"
                            },
                            "code": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "SystemInfo": {
                "title": "SystemInfo",
                "description": "",
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "version": {
                        "type": "string"
                    },
                    "apiVersion": {
                        "type": "string"
                    },
                    "builtOn": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "gitCommitId": {
                        "type": "string"
                    }
                }
            },
            "Design": {
                "title": "DesignMetaData",
                "description": "",
                "allOf": [
                    {
                        "required": [
                            "createdBy",
                            "createdOn",
                            "modifiedBy",
                            "modifiedOn",
                            "type",
                            "name"
                        ],
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "description": {
                                "type": "string"
                            },
                            "createdBy": {
                                "type": "string"
                            },
                            "createdOn": {
                                "format": "date-time",
                                "type": "string"
                            },
                            "modifiedBy": {
                                "type": "string"
                            },
                            "modifiedOn": {
                                "format": "date-time",
                                "type": "string"
                            },
                            "type": {
                                "type": "string"
                            },
                            "origin": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "$ref": "#/components/schemas/ObjectReference"
                    }
                ]
            },
            "DesignSearchResults": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/AbstractSearchResults"
                    },
                    {
                        "required": [
                            "designs"
                        ],
                        "type": "object",
                        "properties": {
                            "designs": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Design"
                                }
                            }
                        }
                    }
                ]
            },
            "AbstractSearchResults": {
                "required": [
                    "kind",
                    "count",
                    "page",
                    "pageSize"
                ],
                "type": "object",
                "properties": {
                    "kind": {
                        "type": "string"
                    },
                    "count": {
                        "type": "integer"
                    },
                    "page": {
                        "description": "",
                        "type": "integer"
                    },
                    "pageSize": {
                        "description": "",
                        "type": "integer"
                    }
                }
            },
            "DesignEventType": {
                "description": "",
                "enum": [
                    "create",
                    "import",
                    "update",
                    "download",
                    "register"
                ],
                "type": "string"
            },
            "CreateDesignEvent": {
                "description": "",
                "required": [
                    "on",
                    "id",
                    "data",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "type": {
                        "$ref": "#/components/schemas/DesignEventType",
                        "description": ""
                    },
                    "on": {
                        "format": "date-time",
                        "description": "",
                        "type": "string"
                    },
                    "data": {
                        "$ref": "#/components/schemas/DesignEventData",
                        "description": ""
                    },
                    "id": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "DesignEventData": {
                "description": "",
                "type": "object",
                "additionalProperties": true
            },
            "DesignEvent": {
                "description": "",
                "type": "object",
                "allOf": [
                    {
                        "required": [
                            "on",
                            "eventId",
                            "data",
                            "type"
                        ],
                        "type": "object",
                        "properties": {
                            "eventId": {
                                "description": "",
                                "type": "string"
                            },
                            "type": {
                                "$ref": "#/components/schemas/DesignEventType",
                                "description": ""
                            },
                            "on": {
                                "format": "date-time",
                                "description": "",
                                "type": "string"
                            },
                            "data": {
                                "$ref": "#/components/schemas/DesignEventData"
                            }
                        }
                    },
                    {
                        "$ref": "#/components/schemas/ObjectReference"
                    }
                ]
            },
            "DesignEventList": {
                "description": "",
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/DesignEvent"
                }
            },
            "SortOrder": {
                "description": "",
                "enum": [
                    "asc",
                    "desc"
                ],
                "type": "string"
            },
            "SortBy": {
                "description": "",
                "enum": [
                    "name",
                    "createdOn"
                ],
                "type": "string"
            }
        },
        "responses": {
            "NotFound": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Error"
                        },
                        "examples": {
                            "NotFoundExample": {
                                "value": {
                                    "error_code": 404,
                                    "message": "No design with id 'Inbound API' could be found."
                                }
                            }
                        }
                    }
                },
                "description": "Common response for all operations that can return a `404` error."
            },
            "ServerError": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Error"
                        },
                        "examples": {
                            "ErrorExample": {
                                "value": {
                                    "error_code": 500,
                                    "message": "Lost connection to the database."
                                }
                            }
                        }
                    }
                },
                "description": "Common response for all operations that can fail with an unexpected server error."
            },
            "Conflict": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Error"
                        },
                        "examples": {
                            "ConflictExample": {
                                "value": {
                                    "error_code": 409,
                                    "message": "The design content was invalid."
                                }
                            }
                        }
                    }
                },
                "description": "Common response used when an input conflicts with existing data."
            }
        }
    },
    "tags": [
        {
            "name": "Design"
        },
        {
            "name": "System"
        },
        {
            "name": "Search",
            "description": ""
        }
    ],
    "x-codegen": {
        "bean-annotations": [
            "io.quarkus.runtime.annotations.RegisterForReflection",
            {
                "annotation": "lombok.experimental.SuperBuilder",
                "excludeEnums": true
            },
            {
                "annotation": "lombok.AllArgsConstructor",
                "excludeEnums": true
            },
            {
                "annotation": "lombok.NoArgsConstructor",
                "excludeEnums": true
            },
            {
                "annotation": "lombok.EqualsAndHashCode",
                "excludeEnums": true
            },
            {
                "annotation": "lombok.ToString(callSuper = true)",
                "excludeEnums": true
            }
        ]
    }
}